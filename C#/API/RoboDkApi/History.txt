RoboDK Api Changelog-History

-----------------------------------------------------
11.4.2018

	New Api Functions:

	IRoboDK.cs
		RecentFiles()
		AddPoints()
		AddMachiningProject()
		BuildMechanism()
		GetCursorXYZ()

	Item.cs:
		SetParent()
		setMachiningParameters()
		ObjectLink()
		GetLink()

	Behaviour Change of MoveJ() and MoveL()

-----------------------------------------------------	
17.04.2018 (RoboDK Build 4871)

	New Api Functions:

	IRoboDK.cs
		GetOpenStation()
		SetInteractiveMode()
		
-----------------------------------------------------
19.04.2018
	New Api Functions:

	Item.cs
	    Replaced all anonymous double[] arrays with System.Windows.Media.Color 
			ReColor()
			GetColor()
			SetColor()

	New class RDKColorExtension.cs
		Extension methods to convert Color to double[] array and vice versa

-----------------------------------------------------
25.04.2018
	New Api Functions:

	IRoboDK.cs
		FitAll()

	Item.cs
		GetInstructionListJoints()

-----------------------------------------------------	
03.05.2018
	New Api Function:
	Item.cs
		SetTransparency()

-----------------------------------------------------

30.05.2018
	New Api Functions:

	IRoboDK.cs
		RoboDKBuild
		RequireBuild() (internal)
		Version()
		GetCollisionItems()
		Popup_ISO9283_CubeProgram()

	Item.cs
		ShowInstructions()
		ShowTargets()

	Changes in GetLicense() and renaming of internal SetConnectionParameter() -> VerifyConnection()
	
-----------------------------------------------------

18.6.2018
    New Api Functions:
	
	Item.cs
        bool SelectedFeature(out ObjectSelectionType featureType, out int featureId);
        string GetPoints(ObjectSelectionType featureType, int featureId, out Mat pointList);

-----------------------------------------------------

3.7.2018

	Item.cs:
		New Api function:
			public void ShowAsCollided(bool collided, int robot_link_id = 0)
			
	RoboDK.cs
	    Execute socket.Receive as Task to keep a GUI Application responsive.
		
		Changed Signature:
			public IItem AddShape(Mat trianglePoints, IItem addTo = null, bool shapeOverride = false, Color? color = null)
				new -> optional parameter color		
			public bool Collision(IItem item1, IItem item2, bool use_collision_map = true)
				new -> optional parameter use_collision_map
				
		New Api function:
			public bool SetCollisionActivePair(List<CollisionCheckOptions> check_state, List<IItem> item1, List<IItem> item2, List<int> id1 = null, List<int> id2 = null);
			public void SetParameter(string parameter, double value);
			public void SetVisible(List<IItem> item_list, List<bool> visible_list, List<int> visible_frames = null);
			
-----------------------------------------------------

16.7.2018 (RoboDK Version 3.4.7.5517)

	Item.cs:
		New Api function:

			SetColor (for shapes)
			public void SetColor(int shape_id, List<double> tocolor)
				You can provide the ID before the color to specify the shape. The color change will only apply to the shape.

			Selection Event:
				It should now work well for any type of selection (3D view or tree). 

			SolveIK and SolveIK All accept tool and reference frames
				As an example, to calculate the current inverse kinematics you can do:
				var jnts=ROBOT.SolveIK(ROBOT.Pose(), null, ROBOT.PoseTool(), ROBOT.PoseFrame());

			Auto Render Delay:
				During our call last week I mentioned I would add the option to set this flag to -1 to force update
				and render each time you modify something in the RoboDK station. 
				This delay can be modified in the following 2 ways:
					1- In RoboDK: Tools-Options-Other-Auto Render Delay (used to be Auto Render Lag)
					2- Through the INI file in %APPDATA%/RoboDK/settings.ini
						AUTO_RENDER_DELAY=100

